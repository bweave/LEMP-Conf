[mysqld]

# Without considering MyISAM buffers, each connection uses about
# 192KB of memory. You need to make sure that-
# (max_connections * 192KB) + innodb_buffer_pool_size is less
# than your total amount of system memory, otherwise MySQL could
# start swapping. Default value is 100 connections.
# 2000 connections will use ~400MB of memory.
max_connections=2000

# This should be set to average number of connections * number
# of your most commonly accessed tables. So, if, on average
# you have 50 connections and have 5 frequently accessed tables,
# set this as 250. The default is low (64)
table_cache=250

# Disable the query cache. Both of these must be set as 0 due
# to a bug in MySQL. The query cache adds a global lock and
# performs poorly with a non-trivial write-load.
query_cache_size=0
query_cache_type=0

# Instead of having one big InnoDB file, split it up per table.
# This has no performance implications, gives you better data
# management features over your individual tables, and more
# insight into the system.  It only impacts new tables and will
# not affect old "monolithic file" style InnoDB tables.
innodb_file_per_table

# InnoDB has two different versions: Antelope (the older version)
# and Barracuda (the newest). Tell InnoDB that we always want to use
# the Barracuda.
innodb_file_format=barracuda

# Tells the operating system that MySQL will be doing its own
# caching and that it should skip using the file system cache.
# Prevents double caching of the data (once inside of MySQL and
# again by the operating system.)
innodb_flush_method=O_DIRECT

# Set this to 1 on your master server for safest, ACID compliant
# operation (sync after every transaction, high I/O)

# Set this to 2 on your slave, which can cause up to a second of
# data loss after an operating system crash, but frees up I/O
# because it only fsyncs data to disk once per second.
innodb_flush_log_at_trx_commit=1

# Set this to 1 on your master server
sync_binlog=1

# Bigger log file size = less I/O used for writes, longer
# recovery time during a failure
innodb_log_file_size=128M

# Set this to ~90% of your memory on a dedicated box.
# This is probably the most important
# MySQL value that you need to tune.
innodb_buffer_pool_size=200M

# InnoDB uses background threads to prefetch
# and store data. The default is 4 threads, but
# should really be 4 * # of CPU cores
innodb_read_io_threads=4
innodb_write_io_threads=4

# This should be set as the maximum amount of
# IOPS that your system has. It sets a max cap
# on how much I/O that InnoDB can use.
# 7200RPM Drive 200
# 4 Drives in RAID-10 5000
# Single Consumer SSD 10000
# Enterprise SSD 50000
# Digital Ocean 512MB Ubuntu Droplet 5000
innodb_io_capacity = 5000

# This limits the number of threads that InnoDB can perform
# at a given time. Setting it to 0 means that it's infinite and
# is a good value for Percona 5.5. Non-Percona setups should
# set it as 1x the number of CPU cores.
innodb_thread_concurrency=0